# Misc options

set -g prefix C-space
bind C-space send-prefix
setw -g base-index 1
setw -g mode-keys vi
setw -g pane-base-index 1

set-option -sg escape-time 20
set-option -g focus-events on
set-option -g repeat-time 0

set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m' #italix
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# Remove any problematic wheel bindings and use this instead:
set -g mouse on
set-option -g default-shell /opt/homebrew/bin/fish

# Simple approach - send scroll events to applications
# bindbind-key -n WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# bind-key -n WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t ="
# Swap windows
bind . command-prompt -p "(swap-window)" "swapw -t '%%'"

# Session management
bind S command-prompt -p "(new-session)" "new-session -s '%%'"

 #selecting by index
bind C-1 select-window -t 1
bind C-2 select-window -t 2
bind C-3 select-window -t 3
bind C-4 select-window -t 4
bind C-5 select-window -t 5
bind C-6 select-window -t 6

bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6

# zoom faster
bind m resize-pane -Z
bind C-m resize-pane -Z

# Unbinding past pane movements
unbind o
unbind i
unbind C-o
unbind C-i

# Unbinding bad window movements in favor of selecting them by index
unbind p
unbind n
unbind C-p
unbind C-n

# Better selection, yanking and pasting
unbind [
unbind ]
unbind v
bind v copy-mode
bind C-v copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection 

if-shell "command -v wl-copy" {
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"
    bind-key P run "wl-paste | tmux loadb - ; tmux pasteb -p"
}

if-shell "command -v pbcopy" {
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key P run "pbpaste | tmux loadb - ; tmux pasteb -p"
}

# Splits with current path
unbind %
bind \\ split-window -hc "#{pane_current_path}"

# Horizontal split
unbind '"'
bind - split-window -c "#{pane_current_path}"
set -g @continuum-boot 'on'  # Start tmux automatically on boot
set -g @continuum-boot-options 'iterm,fullscreen'  # macOS specific options

# Reload config
unbind r
bind r source-file ~/.tmux.conf

# don't do anything when a 'bell' rings
set -g visual-bell off
set -g bell-action none
set -g visual-silence off
set -g visual-activity off
setw -g monitor-activity off

# clock mode
setw -g clock-mode-colour colour4

# copy mode
setw -g mode-style 'fg=colour4 bg=colour0 bold'

# pane borders
set -g pane-border-style 'fg=colour0'
set -g pane-active-border-style 'fg=colour4'

# statusbar
set -g status-position top
set -g status-justify left
set -g status-left ' #[fg=colour6]#{?window_zoomed_flag,+,-}'

set -g status-style 'fg=colour4'
set -g status-right '#[fg=colour4]#S #[fg=colour8]at #[fg=colour4]#{client_user} #[fg=colour8]on #[fg=colour4]#h #[fg=colour6]#{?client_prefix,^,-} '
set -g status-right-length 50
set -g status-left-length 10

setw -g window-status-current-style 'fg=colour4 bold'
setw -g window-status-current-format ' #I #W'

setw -g window-status-style 'fg=colour4'
setw -g window-status-format ' #[fg=colour8]#I #[fg=colour8]#W'

setw -g window-status-bell-style 'fg=colour2 bg=colour4 bold'

# messages
set -g message-style 'fg=colour4 bold'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }
 
bind m resize-pane -Z
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 1'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 1'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 1'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 1'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @resurrect-dir '~/.tmux/resurrect'
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore-delay '2'
set -g @continuum-save-interval '5'
set -g @scroll-without-changing-pane "on"
set -g @scroll-speed-num-lines-per-scroll "3"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# Add this line to ~/.tmux.conf
#run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
#run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
run '~/.tmux/plugins/tpm/tpm'


